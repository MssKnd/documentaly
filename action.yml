name: documentaly
author: mssknd
description: Check document maintenance
branding:
  icon: file-text
  color: orange
inputs:
  BASE_BRANCH:
    description: 'Base branch name (default: main)'
    default: 'main'
  MARKDOWN_DIR:
    default: '*'
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: install documentaly
      shell: bash
      run: deno install -A --name documentaly https://deno.land/x/documentaly/mod.ts
    - name: Fetch base branch
      shell: bash
      run: git fetch origin ${{ inputs.BASE_BRANCH }}:${{ inputs.BASE_BRANCH }}
    - name: Check to maintain documents
      # Give a list of modified files and markdowns.
      shell: bash
      run: >
        documentaly check
        $(git diff --name-only HEAD ${{ inputs.BASE_BRANCH }} | tr '\n' ' ')
        -m $(find ${{ inputs.MARKDOWN_DIR }} -name '*.md' -type f | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/,/g' -e 's/,$//')
        > ./dipendency.json
    - name: Generate comment body file
      shell: bash
      env:
        PR_HEAD_SHA: ${{github.event.pull_request.head.sha}}
        PR_HEAD_FULL_NAME: ${{github.event.pull_request.head.repo.full_name}}
      run: >
        documentaly comment
        -b ${PR_HEAD_FULL_NAME}
        -s ${PR_HEAD_SHA}
        -j "$( cat ./dipendency.json )"
        > comment-body.txt
    - name: Remove previous comment
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
      run: >
        # PRのURL
        pr_number="${PR_NUMBER}"
        # 発言を検索するための文字列
        search_string="<sub>reported by documentaly</sub>"

        # GitHub CLIを使用してPRのコメントを取得する
        comments=$(gh pr view $pr_number --json comments)

        # すべてのコメントをループして、指定された文字列を含むコメントのIDを見つける
        for comment in $(echo "${comments}" | jq -r '.[] | @base64'); do
          comment_id=$(echo ${comment} | base64 --decode | jq -r '.id')
          comment_body=$(echo ${comment} | base64 --decode | jq -r '.body')

          if [[ $comment_body == *"$search_string"* ]]; then
            echo "Comment ID: $comment_id"
            gh api \
              --method DELETE \
              -H "Accept: application/vnd.github+json" \
              /repos/OWNER/REPO/pulls/comments/${comment}
          fi
        done
    - name: Make comment on pull request when this action was pull request event.
      env:
        GH_TOKEN: ${{ github.token }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
      shell: bash
      run: >
        if [ -n "${PR_NUMBER}" ] && [ -s ./comment-body.txt ]; then
          gh pr comment ${PR_NUMBER} -F ./comment-body.txt
        fi
